<div id="app">
  <validator name="validation1">
  <form novalidate @submit.prevent="onSubmit">
    username: <input type="text" v-validate:username="['chu']" initial="off" detect-blur="off" detect-change="off"><br />
    <p v-if="$validation1.username.chu">{{ $validation1.username.chu }}</p>
    email: <input type="text" v-validate:address="['email']" initial="off" detect-blur="off"><br />
    age: <input type="text" v-validate:age="['numeric']"><br />
    site: <input type="text" v-validate:site="['url']"><br />
    <div class="errors">
     <validator-errors :component="'custom-error'" :validation="$validation1"></validator-errors>
     
    </div>
     <input  type="submit" class="btn" value="确认提交" >
    </form>
    </validator>
</div>


Vue.validator('email', {
  message: 'invalid email address', // error message with plain string
  check: function (val) { // define validator
    return /^(([^<>()[\]\\.,;:\s@\"]+(\.[^<>()[\]\\.,;:\s@\"]+)*)|(\".+\"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/.test(val)
  }
})

// build-in `required` validator customization
Vue.validator('chu', {
  message: function (field) { // error message with function
    return 'requiredchuchu "' + field + '" field'
  },
  check: Vue.validator('required') // re-use validator logic
  //check:function(){
   // return true;
 // }
})


Vue.component('custom-error', {
  props: ['field', 'validator', 'message'],
  template: '<p class="error">{{message}}</p>'
})

new Vue({
  el: '#app',
  validators: {
    numeric: { // `numeric` custom validator local registration
      message: 'invalid numeric value',
      check: function (val) {
        return /^[-+]?[0-9]+$/.test(val)
      }
    },
    chu2:{
       message:'chu2 error',
       check:function(){
        return false;
       }
    },
    url: { // `url` custom validator local registration
      message: function (field) {
        return 'invalid "' + field + '" url format field'
      },
      check: function (val) {
        return /^(http\:\/\/|https\:\/\/)(.{4,})$/.test(val)
      }
    }
  },
  data: {
    email: '',
    
  },
  methods:{
    onSubmit:function(e){
    var self = this;
     
      this.$validate(['address','用户名'],true, function () {
      //如果未设置 field 参数，验证所有字段
      //如果 touched 参数为 true，那么验证结果的 touched 值会被设置为 true
       
        alert(self.$validation1.valid);
        
        
             })
       
       
      
      
    }
  }
})